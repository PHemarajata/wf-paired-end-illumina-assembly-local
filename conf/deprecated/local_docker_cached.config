/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Local Docker Configuration with Advanced Database Caching
    System: 22 cores, 64GB RAM
    Features: Persistent database caching, optimized resource allocation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

// Include base local docker config
includeConfig 'local_docker.config'

// Advanced caching parameters
params {
    // Cache directories for persistent storage
    cache_base_dir     = "${HOME}/.nextflow_cache"
    database_cache_dir = "${params.cache_base_dir}/databases"
    
    // Override database URLs to use cached versions when available
    blast_db_cache     = "${params.cache_base_dir}/blast/16S_ribosomal_RNA"
    kraken1_db_cache   = "${params.cache_base_dir}/kraken/minikraken_20171019_8GB"
    kraken2_db_cache   = "${params.cache_base_dir}/kraken/k2_standard_08gb_20231009"
    checkm2_db_cache   = "${params.cache_base_dir}/checkm2/checkm2_database"
    sra_scrubber_cache = "${params.cache_base_dir}/databases/human_filter.db"
    
    // CAT and GTDB databases (if used)
    cat_db_cache       = "${params.cache_base_dir}/cat"
    gtdb_db_cache      = "${params.cache_base_dir}/gtdb"
    busco_db_cache     = "${params.cache_base_dir}/busco"
}

// Enhanced Docker configuration with volume mounts for caching
docker {
    enabled = true
    fixOwnership = true
    runOptions = "-u \$(id -u):\$(id -g)"
    
    // Performance optimizations
    runOptions = "${docker.runOptions} --shm-size=8g"
    runOptions = "${docker.runOptions} --ulimit memlock=-1:-1"
    
    // Cache volume mounts (persistent across container restarts)
    runOptions = "${docker.runOptions} -v ${params.cache_base_dir}:/cache"
    runOptions = "${docker.runOptions} -v ${params.database_cache_dir}:/opt/databases"
    runOptions = "${docker.runOptions} -v ${params.cache_base_dir}/blast:/opt/blast"
    runOptions = "${docker.runOptions} -v ${params.cache_base_dir}/kraken:/opt/kraken"
    runOptions = "${docker.runOptions} -v ${params.cache_base_dir}/checkm2:/opt/checkm2"
    runOptions = "${docker.runOptions} -v ${params.cache_base_dir}/busco:/opt/busco"
    runOptions = "${docker.runOptions} -v ${params.cache_base_dir}/gtdb:/opt/gtdb"
    runOptions = "${docker.runOptions} -v ${params.cache_base_dir}/cat:/opt/cat"
}

// Process-specific cache optimizations
process {
    // Database preparation processes - use cached locations
    withName: 'BLAST_DB_PREPARATION_UNIX' {
        beforeScript = """
        mkdir -p ${params.cache_base_dir}/blast
        if [ -d "${params.blast_db_cache}" ]; then
            echo "Using cached BLAST database from ${params.blast_db_cache}"
            ln -sf ${params.blast_db_cache}/* ./
        fi
        """
        afterScript = """
        if [ ! -d "${params.blast_db_cache}" ]; then
            echo "Caching BLAST database to ${params.blast_db_cache}"
            mkdir -p ${params.blast_db_cache}
            cp -r ./* ${params.blast_db_cache}/
        fi
        """
    }
    
    withName: 'KRAKEN.*_DB_PREPARATION_UNIX' {
        beforeScript = """
        mkdir -p ${params.cache_base_dir}/kraken
        KRAKEN_CACHE="${params.cache_base_dir}/kraken/\$(basename \$PWD)"
        if [ -d "\$KRAKEN_CACHE" ]; then
            echo "Using cached Kraken database from \$KRAKEN_CACHE"
            ln -sf \$KRAKEN_CACHE/* ./
        fi
        """
        afterScript = """
        KRAKEN_CACHE="${params.cache_base_dir}/kraken/\$(basename \$PWD)"
        if [ ! -d "\$KRAKEN_CACHE" ]; then
            echo "Caching Kraken database to \$KRAKEN_CACHE"
            mkdir -p \$KRAKEN_CACHE
            cp -r ./* \$KRAKEN_CACHE/
        fi
        """
    }
    
    withName: 'CHECKM2_DB_PREPARATION_UNIX' {
        beforeScript = """
        mkdir -p ${params.cache_base_dir}/checkm2
        if [ -d "${params.checkm2_db_cache}" ]; then
            echo "Using cached CheckM2 database from ${params.checkm2_db_cache}"
            ln -sf ${params.checkm2_db_cache}/* ./
        fi
        """
        afterScript = """
        if [ ! -d "${params.checkm2_db_cache}" ]; then
            echo "Caching CheckM2 database to ${params.checkm2_db_cache}"
            mkdir -p ${params.checkm2_db_cache}
            cp -r ./* ${params.checkm2_db_cache}/
        fi
        """
    }
    
    withName: 'PREPARE_DB_SRA_HUMAN_SCRUBBER' {
        beforeScript = """
        mkdir -p ${params.database_cache_dir}
        if [ -f "${params.sra_scrubber_cache}" ]; then
            echo "Using cached SRA Human Scrubber database from ${params.sra_scrubber_cache}"
            ln -sf ${params.sra_scrubber_cache} ./
        fi
        """
        afterScript = """
        if [ ! -f "${params.sra_scrubber_cache}" ]; then
            echo "Caching SRA Human Scrubber database to ${params.sra_scrubber_cache}"
            cp ./*.db ${params.sra_scrubber_cache}
        fi
        """
    }
}

// Work directory optimization for caching
workDir = "${params.cache_base_dir}/work"

// Increase Nextflow JVM memory for better caching performance
env {
    NXF_OPTS = '-Xms4g -Xmx12g'
    NXF_TEMP = "${params.cache_base_dir}/tmp"
}